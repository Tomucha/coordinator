<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>cz.clovekvtisni.coordinator</groupId>
    <artifactId>coordinator-server</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>Coordinator: server</name>
    <organization>
        <name>Multimedia atelier</name>
        <url>http://www.m-atelier.cz/</url>
    </organization>
    <parent>
        <groupId>cz.clovekvtisni.coordinator</groupId>
        <artifactId>coordinator-parent</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <properties>
        <gae.version>1.7.2</gae.version>
        <!--
            Upload to http://test.latest.<applicationName>.appspot.com by default
        -->
        <gae.application.version>test</gae.application.version>
    </properties>
    <dependencies>

        <dependency>
            <groupId>cz.clovekvtisni.coordinator</groupId>
            <artifactId>coordinator-shared</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-1.0-sdk</artifactId>
            <version>${gae.version}</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.objectify</groupId>
            <artifactId>objectify</artifactId>
            <version>4.0b1</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.objectify-appengine-spring</groupId>
            <artifactId>objectify-appengine-spring</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
        </dependency>
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.tiles</groupId>
            <artifactId>tiles-jsp</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.webflow</groupId>
            <artifactId>spring-webflow</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>

        <!--
            J2EE Servlet API. We need it to compile IndexServlet class. You can
            probably remove it, if you don't explicitly use Servlets
        -->
        <dependency>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-servlet_2.5_spec</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
        </dependency>
        <!--
                  Make use of JSP tags. Remove, if you don't use JSPs
              -->
        <dependency>
            <artifactId>standard</artifactId>
            <groupId>taglibs</groupId>
            <version>1.1.2</version>
            <type>jar</type>
            <scope>runtime</scope>
        </dependency>
        <!-- These dependencies are here just for enabling logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.6.6</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jcl</artifactId>
            <version>1.6.6</version>
        </dependency>
        <!-- Test scope -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <!--
                  GAE libraries for local testing as described here:
                  http://code.google.com/appengine/docs/java/howto/unittesting.html
              -->
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-labs</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-stubs</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-testing</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.jdo</groupId>
            <artifactId>jdo2-api</artifactId>
            <version>2.3-eb</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.transaction</groupId>
                    <artifactId>transaction-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.simpleframework</groupId>
            <artifactId>simple-xml</artifactId>
            <version>2.6.6</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1-beta-1</version>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>src/main/webapp</directory>
                            <filtering>true</filtering>
                            <includes>
                                <include>**/appengine-web.xml</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            <!--
                       The actual maven-gae-plugin. Type "mvn gae:run" to run project, "mvn
                       gae:deploy" to upload to GAE.
                   -->
            <plugin>
                <groupId>net.kindleit</groupId>
                <artifactId>maven-gae-plugin</artifactId>
                <version>0.9.4</version>
                <configuration>
                    <serverId>appengine.google.com</serverId>
                    <jvmFlags>
                        <jvmFlag>-Dmail.log_mail_level=WARNING</jvmFlag>
                        <jvmFlag>-Dmail.log_mail_body=true</jvmFlag>
                        <jvmFlag>-Ddatastore.default_high_rep_job_policy_unapplied_job_pct=20</jvmFlag>
                    </jvmFlags>
                </configuration>
		<dependencies>
   		 <dependency>
      			<groupId>org.codehaus.plexus</groupId>
     			 <artifactId>plexus-archiver</artifactId>
      			<version>2.1.2</version>
    		</dependency>
		</dependencies>
            </plugin>
            <!--
                       Upload application to the appspot automatically, during
                       release:perform
                   -->
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <goals>gae:deploy</goals>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <!--
                 We can configure our integration server to activate this profile and
                 perform gae:deploy, thus uploading latest snapshot to the
                 http://1.latest.<applicationName>.appspot.com automatically
             -->
        <profile>
            <id>integration-build</id>
            <properties>
                <gae.application.version>stage</gae.application.version>
            </properties>
        </profile>
        <!--
                 This profile will activate automatically during release and upload
                 application to the http://2.latest.<applicationName>.appspot.com (We
                 might want to set the 2nd version as our applications Default version
                 to be accessible at http://<applicationName>.appspot.com)
             -->
        <profile>
            <id>release-build</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <!--
                   During release, set application version in appengine-web.xml to 2
                -->
                <gae.application.version>release</gae.application.version>
            </properties>
        </profile>
    </profiles>
    <repositories>
        <repository>
            <id>objectify-appengine</id>
            <name>Objectify Maven Repository</name>
            <url>http://objectify-appengine.googlecode.com/svn/maven</url>
        </repository>
    </repositories>

</project>
